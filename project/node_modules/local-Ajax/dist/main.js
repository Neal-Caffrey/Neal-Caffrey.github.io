(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("local-Zepto"));
	else if(typeof define === 'function' && define.amd)
		define(["local-Zepto"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("local-Zepto")) : factory(root["local-Zepto"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [], result;
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);
/******/ 		while(resolves.length)
/******/ 			resolves.shift()();
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// objects to store loaded and loading chunks
/******/ 	var installedChunks = {
/******/ 		1: 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return Promise.resolve();
/******/
/******/ 		// an Promise means "currently loading".
/******/ 		if(installedChunks[chunkId]) {
/******/ 			return installedChunks[chunkId][2];
/******/ 		}
/******/ 		// start chunk loading
/******/ 		var head = document.getElementsByTagName('head')[0];
/******/ 		var script = document.createElement('script');
/******/ 		script.type = 'text/javascript';
/******/ 		script.charset = 'utf-8';
/******/ 		script.async = true;
/******/ 		script.timeout = 120000;
/******/
/******/ 		if (__webpack_require__.nc) {
/******/ 			script.setAttribute("nonce", __webpack_require__.nc);
/******/ 		}
/******/ 		script.src = __webpack_require__.p + "" + chunkId + ".js";
/******/ 		var timeout = setTimeout(onScriptComplete, 120000);
/******/ 		script.onerror = script.onload = onScriptComplete;
/******/ 		function onScriptComplete() {
/******/ 			// avoid mem leaks in IE.
/******/ 			script.onerror = script.onload = null;
/******/ 			clearTimeout(timeout);
/******/ 			var chunk = installedChunks[chunkId];
/******/ 			if(chunk !== 0) {
/******/ 				if(chunk) chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));
/******/ 				installedChunks[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/
/******/ 		var promise = new Promise(function(resolve, reject) {
/******/ 			installedChunks[chunkId] = [resolve, reject];
/******/ 		});
/******/ 		installedChunks[chunkId][2] = promise;
/******/
/******/ 		head.appendChild(script);
/******/ 		return promise;
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */,
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_RESULT__;/*
 * Ajax - $1.1.0
 * 功能：ajax请求
 * 说明：添加promise支持
 * 参数： {
 ** promise : true, 默认支持promise
 * }
 */


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _gol = window || undefined;

var $ = __webpack_require__(0);

var _extend = function _extend(obj, props) {
	for (var key in props) {
		obj[key] = props[key];
	}return obj;
};

var _Promise = _gol.Promise;

var PackPromise = function PackPromise() {
	if (_Promise) return new _Promise(function (resolve, reject) {
		resolve(_Promise);
	});else return __webpack_require__.e/* require.ensure */(0).then((function (require) {
		return __webpack_require__(1);
	}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
};

var _result = function _result(result) {
	if (typeof result == 'string') return JSON.parse(JSON.stringify(result));else return result;
};

var _uuid = function _uuid() {
	return 'WG_Ajax' + new Date().getTime();
};

var Ajax = function () {
	function Ajax(option) {
		_classCallCheck(this, Ajax);

		this.name = 'Ajax';
		this.version = '$1.1.0';
		this.catchs = [];
		this.option = {
			url: '',
			type: 'GET',
			dataType: 'json',
			promise: true,
			success: function success() {},
			fail: function fail() {},
			abort: false
		};
		this.data = {
			name: this.name,
			uuid: _uuid()
		};
		this._option = option;
	}

	_createClass(Ajax, [{
		key: 'checkList',
		value: function checkList() {}
	}, {
		key: '_action',
		value: function _action() {
			var _this = this;

			var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};


			if (option.promise) return this.promise().then(function (res) {
				return new res(function (resolve, reject) {
					var params = {
						success: function success(_success) {
							resolve(_success);
						},
						fail: function fail(_fail) {
							reject(_fail);
						},
						error: function error(xhr, errorType, _error) {
							reject(xhr, errorType, _error);
						}
					};
					_extend(option, params);
					if (_this.data.abort) _this.catchs.push($.ajax(option));else $.ajax(option);
				});
			});else {
				if (this.option.abort) {
					var opSuccess = option.success;
					try {
						delete option.success;
					} catch (e) {
						option.success = null;
					}
					var opt = {
						success: function success(res) {
							_this.catchs.shift();
							opSuccess.call(_this, res);
						}
					};
					_extend(option, opt);
					this.catchs.forEach(function (item) {
						item.abort();
					});
					this.catchs.push($.ajax(option));
					return this.catchs[0];
				} else return $.ajax(option);
			}
		}
	}, {
		key: 'promise',
		value: function promise() {
			return PackPromise().then(function (res) {
				return res;
			});
		}
	}, {
		key: 'ajax',
		value: function ajax() {
			var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

			this._option = option;
			return this._action(this.option);
		}
	}, {
		key: '_name',
		get: function get() {
			return this.name;
		}
	}, {
		key: '_version',
		get: function get() {
			return this.version;
		}
	}, {
		key: '_option',
		set: function set(option) {
			_extend(this.option, option);
		},
		get: function get() {
			return this.option;
		}
	}, {
		key: '_data',
		set: function set(data) {
			_extend(this.data, data);
		},
		get: function get() {
			return this.data;
		}
	}]);

	return Ajax;
}();

if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	return Ajax;
}.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') module.exports = Ajax;else _gol.Ajax = Ajax;

/***/ })
/******/ ]);
});
//# sourceMappingURL=main.js.map