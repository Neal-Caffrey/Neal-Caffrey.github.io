/*
 * webpack.config - 1.0.0
 *
 */

const HtmlWebpackPlugin = require('html-webpack-plugin');
const webpack = require('webpack');
const path = require('path');
const common = require('./common.js');
const projectRoot = path.resolve(__dirname, './');

const hotMiddlewareScript = 'webpack-hot-middleware/client?reload=true';
const exitNodeModules = function(files) {
	if (!/\/local-/.test(files) && /\/node_modules\//.test(files)) return files;
	return '';
};

const argv = process.argv;
const getWatching = function() {
	let index = argv.indexOf('--watch');
	let prop = true;
	if (index > -1 && argv[index + 1] == 'false')
		prop = false;
	return prop;
}

module.exports = {
	watch: getWatching(),
	entry: {
		'index': ['./test/static/index.js', hotMiddlewareScript],
		'main': './src/index.js',
	},
	output: {
		filename: '[name].js',
		path: path.join(projectRoot, './dist'),
		publicPath: '/',
		libraryTarget: 'umd',
	},
	// devtool: 'source-map',
	resolve: {
		alias: {
			'src': path.join(projectRoot, '../src'),
			'assets': path.join(projectRoot, '../src/assets')
		}
	},
	externals: {
    react: {
      root: 'React',
      commonjs2: 'react',
      commonjs: 'react',
      amd: 'react'
    },
    'react-dom': {
      root: 'ReactDOM',
      commonjs2: 'react-dom',
      commonjs: 'react-dom',
      amd: 'react-dom'
    }
  },
	module: {
		loaders: [{
			test: /\.js$/,
			loader: 'babel-loader',
			query: {
				presets: ['es2015','react','stage-0'],
			}
		}, {
			test: /\.json$/,
			loader: 'json-loader'
		}, {
			test: /\.(png|jpe?g|gif|svg)(\?.*)?$/,
			loader: 'url-loader',
			query: {
				limit: 2000,
			}
		}, {
			test: /\.(woff2?|eot|ttf|otf)(\?.*)?$/,
			loader: 'url-loader',
			query: {
				limit: 10000,
			}
		}, {
			test: /\.scss$/,
			use: [{
				loader: "style-loader"
			}, {
				loader: "css-loader"
			}, {
				loader: "sass-loader"
			}, ]
		}, {
			test: /\.html$/,
			loader: "html-loader",
			include: path.join(projectRoot, './src'),
			exclude: exitNodeModules,
		}, {
			test: /\.css$/,
			use: [{
				loader: 'css-loader'
			}]

		}, {
			test: /\.tpl$/,
			loader: "string-loader"
		}]
	},
	plugins: [
		// new webpack.HotModuleReplacementPlugin(),
		new webpack.NoErrorsPlugin(),
		new HtmlWebpackPlugin({
			title: '皇包车-插件系统-NewMap',
			filename: 'app/index.html',
			template: path.join(projectRoot, './test/views/index.html'),
			inject: true,
			common: common,
			chunks: ['index']
		}),
	]

}
