/*
* Layer - 1.0.4
* 功能：***
* 说明：***
* 参数： {
**
* }
*/

const [_gol, _define, _exports] = [window || this, define, exports];

const $ = require('local-Zepto');
const juicer = require('local-Juicer');
const tpl = require('./tpl/index.tpl');

require('./scss/index.scss');

const _extend = (obj, props) => {
    for (let key in props) obj[key] = props[key];
    return obj;
};
const _uuid = () => 'WG_Layer' + (new Date()).getTime();

class Layer {
	constructor(option){
		this.name = 'Layer';
		this.version = '1.0.4';
		this.option = option;
		this.data = {
			name : this.name,
			uuid : _uuid(),
      msg : this.option.msg || '信息不正确'
		};
		this.dom = {

		};
		this.wrap = this._wrap;
		this.init(option);
	}

	get _name(){
		return this.name;
	}

	get _version(){
		return this.version;
	}

	set _option(option){
		_extend(this.option, option);
	}

	get _option(){
		return this.option;
	}

	set _data(data){
		_extend(this.data, data);
	}

	get _data(){
		return this.data;
	}

	get _wrap(){
		return ((wrap)=>{
      let wrapRes = $(wrap || '#wrap')
      return wrapRes.length > 0 ? wrapRes : $('body');
    })(this._option.wrap);
	}

	init(option){
		this.renderUI();
    this.cacheDom();
    this.cacheEvent();
	}
	cacheDom(){
		let dom = {
        innerWrap : $('#' + this.data.uuid)
		};
		_extend(this.dom, dom);
		return this.dom;
	}
	renderUI(){
    if (!this.wrap || this.wrap.length < 0) {
      return;
    }
    this.wrap.append(juicer(tpl, this.data));
	}
	cacheEvent(){
    setTimeout(()=> {
      this.dom.innerWrap.remove();
    }, 2000);
	}
}

if(typeof _define === 'function' && _define.amd) _define(function() {return Layer});
else if(typeof _exports === 'object') module.exports = Layer;
else _gol.Layer = Layer;
