/*
 * Request - $1.0.4
 * 功能：***
 * 说明：***
 * 参数： {
 **
 * }
 */
"use strict";

const _gol = window || this;

const ajax = require('local-Ajax');

const _extend = (obj, props) => {
	for (let key in props) obj[key] = props[key];
	return obj;
};

class Request {
	constructor(option) {
		this.name = 'Request';
		this.version = '$1.0.4';
		this.option = {
			url: '',
			white: 0,
			black: 0,
			message: ''
		};
		this._option = option;
		this.data = {
			name: this.name,
		};
		this._data = {
			white: this._white
		};
		this._data = {
			black: this._black
		};
		this._data = {
			message: this._message
		}
	}

	get _name() {
		return this.name;
	}

	get _version() {
		return this.version;
	}

	set _option(option) {
		_extend(this.option, option);
	}

	get _option() {
		return this.option;
	}

	set _data(data) {
		_extend(this.data, data);
	}

	get _data() {
		return this.data;
	}

	get _white() {
		return [200].concat(this.option.white);
	}

	get _message() {
		let defaults = {
			0: '服务器异常或者请求路径不正确',
			200: '请先登录，如有疑问，请联系云地接客服：400-060-0766',
			302: '服务器异常，请重新登录，如有疑问，请联系云地接客服：400-060-0766',
			420: '会话已失效，请重新登录！',
			421: '您的账号已被封禁，如有疑问，请联系云地接客服：400-060-0766',
			404: '服务器异常，请重新登录，如有疑问，请联系云地接客服：400-060-0766'
		};
		return _extend(defaults, this.option.message);
	}

	get _black() {
		let _black = [302, 420, 421, 404].concat(this.option.black);
		return [200].concat(_black.filter((item, key) => {
			if (this.data.white.indexOf(item) > -1) return false;
			return true;
		}));
	}

	checked(status) {
		return this.data.message[status];
	}

	promise() {
		return new ajax().promise();
	}

	ajax(option) {
		let _ajax = new ajax();
		return _ajax.promise()
			.then((res) => {
				return new res((resolve, reject) => {
					let opt = _extend(this.option, option);
					_ajax.ajax(opt)
						.then((res) => {
							if (this.data.white.indexOf(res.status) > -1) resolve(res);
							else reject(res.message);
						}, (xhr, errorType, error) => {
							reject(this.checked(xhr.status));
						});
				})
			});
	}
}

if (typeof define === 'function' && define.amd) define(function() {
	return Request
});
else if (typeof exports === 'object') module.exports = Request;
else _gol.Request = Request;